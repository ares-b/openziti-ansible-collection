---

- name: Get OpenZiti version if latest is provided
  ansible.builtin.uri:
    url: https://api.github.com/repos/openziti/ziti/releases/latest
    body_format: json
  register: api_response_payload
  when: openziti_version == "latest"

- name: Set OpenZiti binaries binaries version if latest is provided
  set_fact:
    openziti_version: "{{ api_response_payload['json']['tag_name'] | replace('v', '') }}"
  when: openziti_version == "latest"

- name: Download OpenZiti binaries on cache server
  ansible.builtin.get_url:
    url: "{{ openziti_binaries_url }}"
    dest: "{{ openziti_cache_downloads_dir }}"
  delegate_to: "{{ openziti_cache_host }}"
  delegate_facts: false
  become: "{{ not openziti_cache_localhost }}"
  run_once: true

- name: Unarchive OpenZiti binaries on cache server
  ansible.builtin.unarchive:
    src: "{{ openziti_cache_downloads_dir }}/{{ openziti_archive_name }}.{{ openziti_archive_extension }}"
    dest: "{{ openziti_cache_release_version_dir }}"
    owner: "ares"
  delegate_to: "{{ openziti_cache_host }}"
  delegate_facts: false
  become: "{{ not openziti_cache_localhost }}"
  run_once: true

- name: Copy binaries from cache server to ansible controller
  ansible.builtin.fetch:
    src: "{{ openziti_cache_release_version_dir }}/{{ item }}"
    dest: "{{ openziti_cache_releases_dir }}/{{ item }}"
  with_items: "{{ openziti_components }}"
  when: not openziti_cache_localhost
  delegate_to: "localhost"
  delegate_facts: false
  become: false
  run_once: true

