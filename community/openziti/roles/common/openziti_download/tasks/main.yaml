---
- name: Check remote OS and OS Architecture
  ansible.builtin.fail: 
    msg: "Unsupported OS or OS Architecture"
  when: 
    - openziti_os_name not in openziti_supported_os_architecture.keys()
    - openziti_os_architecture not in openziti_supported_os_architecture[openziti_os_name].values()

- name: Make sure required packages are installed
  import_tasks: required_packages.yml

- name: Make sure required packages are installed
  import_tasks: prepare_download.yml

- name: Download OpenZiti binaries to cache server
  import_tasks: download_binaries.yml

- name: Download OpenZiti console to cache server
  import_tasks: download_console.yml

- name: Copy binaries from ansible controller to remote host
  become: true
  ansible.builtin.copy:
    src: "{{ openziti_cache_release_version_dir }}/ziti/{{ item }}"
    dest: "{{ openziti_binaries_path_remote }}/"
    mode: "u=x"
  with_items: "{{ openziti_components | intersect(group_names | map('replace', '_', '-')) }}"








