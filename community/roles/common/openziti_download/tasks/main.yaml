---
- name: Check remote OS and OS Architecture
  failed_when: 
    - openziti_os_name not in openziti_supported_os_architecture.keys()
    - openziti_os_architecture not in openziti_supported_os_architecture[openziti_os_name].values()

- name: Prepare working directories and variables
  import_tasks: prepare_download.yml

- name: Download OpenZiti binaries
  ansible.builtin.get_url:
    url: "{{ openziti_binaries_url }}"
    dest: "{{ openziti_cache_downloads_dir }}"
    deletage_to: "{{ openziti_cache_delegate_to }}"
    become: "{{Â not openziti_cache_localhost }}"

- name: Unarchive OpenZiti binaries
  ansible.builtin.unarchive:
    src: "{{ openziti_cache_downloads_dir }}/{{ openziti_archive_name }}.{{ openziti_archive_extension }}"
    dest: "{{ openziti_cache_releases_dir }}/{{ openziti_archive_name }}"
    deletage_to: "{{ openziti_cache_delegate_to }}"
    owner: "{{ ansible_user_id | default(root)}}"

- name: Copy binaries from cache to nodes
  


