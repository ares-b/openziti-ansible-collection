---

v: 3

#trace:
#  path: "{{ .Controller.Name }}.trace"

#profile:
#  memory:
#    path: ctrl.memprof

db: "{{ openziti_controller.db_path }}"

identity:
  cert: "{{ openziti_controller.identitiy.cert }}"
  server_cert: "{{ openziti_controller.identity.server_cert }}"
  key: "{{ openziti_controller.identity.key }}"
  ca: "{{ openziti_controller.identity.ca }}"

#Network Configuration

# Configure how the controller will establish and manage the overlay network, and routing operations on top of
# the network.
#
network:

  # routeTimeoutSeconds controls the number of seconds the controller will wait for a route attempt to succeed.
  routeTimeoutSeconds: 10

  # createCircuitRetries controls the number of retries that will be attempted to create a path (and terminate it)
  # for new circuits.
  createCircuitRetries: 2

  # pendingLinkTimeoutSeconds controls how long we'll wait before creating a new link between routers where
  # there isn't an established link, but a link request has been sent
  pendingLinkTimeoutSeconds: 10

  # Defines the period that the controller re-evaluates the performance of all of the circuits
  # running on the network.
  #
  cycleSeconds: 15

  # Sets router minimum cost. Defaults to 10
  minRouterCost: 10

  # Sets how often a new control channel connection can take over for a router with an existing control channel connection
  # Defaults to 1 minute
  routerConnectChurnLimit: 1m

  # Sets the latency of link when it's first created. Will be overwritten as soon as latency from the link is actually
  # reported from the routers. Defaults to 65 seconds.
  initialLinkLatency: 65s

  #smart:
    #
    # Defines the fractional upper limit of underperforming circuits that are candidates to be re-routed. If 
    # smart routing detects 100 circuits that are underperforming, and `smart.rerouteFraction` is set to `0.02`,
    # then the upper limit of circuits that will be re-routed in this `cycleSeconds` period will be limited to 
    # 2 (2% of 100).
    #
    rerouteFraction: 0.02
    #
    # Defines the hard upper limit of underperforming circuits that are candidates to be re-routed. If smart 
    # routing detects 100 circuits that are underperforming, and `smart.rerouteCap` is set to `1`, and 
    # `smart.rerouteFraction` is set to `0.02`, then the upper limit of circuits that will be re-routed in this 
    # `cycleSeconds` period will be limited to 1.
    #
    rerouteCap: 4

# the endpoint that routers will connect over to the controller over.
ctrl:
  #options:
  # (optional) settings
  # set the maximum number of connect requests that are buffered and waiting to be acknowledged ({{ .Controller.MinQueuedConnects }} to {{ .Controller.MaxQueuedConnects }}, default {{ .Controller.DefaultQueuedConnects }})
  maxQueuedConnects:      {{ .Controller.DefaultQueuedConnects }}
  # the maximum number of connects that have  begun hello synchronization ({{ .Controller.MinOutstandingConnects }} to {{ .Controller.MaxOutstandingConnects }}, default {{ .Controller.DefaultOutstandingConnects }})
  maxOutstandingConnects: {{ .Controller.DefaultOutstandingConnects }}
  # the number of milliseconds to wait before a hello synchronization fails and closes the connection ({{ .Controller.MinConnectTimeout.Milliseconds }}ms to {{ .Controller.MaxConnectTimeout.Milliseconds }}ms, default: {{ .Controller.DefaultConnectTimeout.Milliseconds }}ms)
  connectTimeoutMs:       {{ .Controller.DefaultConnectTimeout.Milliseconds }}
  listener: tls:{{ openziti_controller.ctrl.listener.address }}:{{ openziti_controller.ctrl.listener.port }}

# the endpoint that management tools connect to the controller over.
mgmt:
  #options:
  # (optional) settings
  # set the maximum number of connect requests that are buffered and waiting to be acknowledged ({{ .Controller.MinQueuedConnects }} to {{ .Controller.MaxQueuedConnects }}, default {{ .Controller.DefaultQueuedConnects }})
  #maxQueuedConnects:      {{ .Controller.DefaultQueuedConnects }}
  # the maximum number of connects that have  begun hello synchronization ({{ .Controller.MinOutstandingConnects }} to {{ .Controller.MaxOutstandingConnects }}, default {{ .Controller.DefaultOutstandingConnects }})
  #maxOutstandingConnects: {{ .Controller.DefaultOutstandingConnects }}
  # the number of milliseconds to wait before a hello synchronization fails and closes the connection ({{ .Controller.MinConnectTimeout.Milliseconds }}ms to {{ .Controller.MaxConnectTimeout.Milliseconds }}ms, default: {{ .Controller.DefaultConnectTimeout.Milliseconds }}ms)
  #connectTimeoutMs:       {{ .Controller.DefaultConnectTimeout.Milliseconds }}
  listener: tls:{{ openziti_controller.mgmt.listener.address }}:{{ openziti_controller.mgmt.listener.port }}

#metrics:
#  influxdb:
#    url:                http://localhost:8086
#    database:           ziti

# xctrl_example
#
#example:
#  enabled:              false
#  delay:                5s

healthChecks:
  boltCheck:
    # How often to try entering a bolt read tx. Defaults to {{ .Controller.HealthCheck.Interval.Seconds }} seconds
    interval: {{ openziti_controller.healthchecks.interval }}s
    # When to time out the check. Defaults to {{ .Controller.HealthCheck.Timeout.Seconds }} seconds
    timeout: {{ openziti_controller.healthchecks.timeout }}s
    # How long to wait before starting the check. Defaults to {{ .Controller.HealthCheck.InitialDelay.Seconds }} seconds
    initialDelay: {{ openziti_controller.healthchecks.initial_delay }}s

# By having an 'edge' section defined, the ziti-controller will attempt to parse the edge configuration. Removing this
# section, commenting out, or altering the name of the section will cause the edge to not run.
edge:
  # This section represents the configuration of the Edge API that is served over HTTPS
  api:
    # (optional, default 90s) Alters how frequently heartbeat and last activity values are persisted
    # activityUpdateInterval: {{ .Controller.Edge.APIActivityUpdateInterval.Seconds }}s
    # (optional, default 250) The number of API Sessions updated for last activity per transaction
    # activityUpdateBatchSize: {{ .Controller.Edge.APIActivityUpdateBatchSize }}
    # (optional, default 30m) The number of minutes before an Edge API session will time out. Timeouts are reset by
    # API requests and connections that are maintained to Edge Routers
    sessionTimeout: {{ openziti_controller.edge.api.session_timeout }}m
    # address - required
    # The default address (host:port) to use for enrollment for the Client API. This value must match one of the addresses
    # defined in this Controller.WebListener.'s bindPoints.
    address: {{ openziti_controller.edge.api.address }}:{{ openziti_controller.edge.api.port }}
  # This section is used to define option that are used during enrollment of Edge Routers, Ziti Edge Identities.
  enrollment:
    # signingCert - required
    # A Ziti Identity configuration section that specifically makes use of the cert and key fields to define
    # a signing certificate from the PKI that the Ziti environment is using to sign certificates. The signingCert.cert
    # will be added to the /.well-known CA store that is used to bootstrap trust with the Ziti Controller.
    signingCert:
      cert: {{ openziti_controller.edge.enrollment.signing_cert.enrollment.cert }}
      key: {{ openziti_controller.edge.enrollment.signing_cert.enrollment.key }}
    # edgeIdentity - optional
    # A section for identity enrollment specific settings
    edgeIdentity:
      # The length of time that a Ziti Edge Identity enrollment should remain valid. After
      # this duration, the enrollment will expire and no longer be usable.
      duration: {{ openziti_controller.edge.enrollment.edge_identity.duration }}m
    # edgeRouter - Optional
    # A section for edge router enrollment specific settings.
    edgeRouter:
      # The length of time that a Ziti Edge Router enrollment should remain valid. After
      # this duration, the enrollment will expire and no longer be usable.
      duration: {{ openziti_controller.edge.enrollment.edge_router.duration }}m

# web
# Defines webListeners that will be hosted by the controller. Each webListener can host many APIs and be bound to many
# bind points.
web:
  - name: management-apis
    bindPoints:
      #interface - required
      # A host:port string on which network interface to listen on. 0.0.0.0 will listen on all interfaces
      - interface: {{ openziti_controller.web.management_api.interface.address }}:{{ openziti_controller.web.management_api.interface.port }}
        # address - required
        # The public address that external incoming requests will be able to resolve. Used in request processing and
        # response content that requires full host:port/path addresses.
        address: {{ openziti_controller.web.management_api.advertised_address }}:{{ openziti_controller.web.management_api.advertised_port }}
-    identity:
      ca: "{{ .Controller.Edge.IdentityCA }}"
      key: "{{ .Controller.Edge.IdentityKey }}"
      server_cert: "{{ .Controller.Edge.IdentityServerCert }}"
      cert: "{{ .Controller.Edge.IdentityCert }}"
    options:
      # idleTimeoutMs - optional, default {{ .Controller.WebListener.IdleTimeout.Milliseconds }}ms
      # The maximum amount of idle time in milliseconds allowed for pipelined HTTP requests. Setting this too high
      # can cause resources on the host to be consumed as clients remain connected and idle. Lowering this value
      # will cause clients to reconnect on subsequent HTTPs requests.
      idleTimeout: {{ .Controller.WebListener.IdleTimeout.Milliseconds }}ms  #http timeouts, new
      # readTimeoutMs - optional, default {{ .Controller.WebListener.ReadTimeout.Milliseconds }}ms
      # The maximum amount of time in milliseconds http servers will wait to read the first incoming requests. A higher
      # value risks consuming resources on the host with clients that are acting bad faith or suffering from high latency
      # or packet loss. A lower value can risk losing connections to high latency/packet loss clients.
      readTimeout: {{ .Controller.WebListener.ReadTimeout.Milliseconds }}ms
      # writeTimeoutMs - optional, default {{ .Controller.WebListener.WriteTimeout.Milliseconds }}ms
      # The total maximum time in milliseconds that the http server will wait for a single requests to be received and
      # responded too. A higher value can allow long-running requests to consume resources on the host. A lower value
      # can risk ending requests before the server has a chance to respond.
      writeTimeout: {{ .Controller.WebListener.WriteTimeout.Milliseconds }}ms
      # minTLSVersion - optional, default {{ .Controller.WebListener.MinTLSVersion }}
      # The minimum version of TSL to support
      minTLSVersion: {{ .Controller.WebListener.MinTLSVersion }}
      # maxTLSVersion - optional, default {{ .Controller.WebListener.MaxTLSVersion }}
      # The maximum version of TSL to support
      maxTLSVersion: {{ .Controller.WebListener.MaxTLSVersion }}
    apis:
      - binding: fabric
        options: {}
      - binding: health-checks
        options: {}
      - binding: edge-management
        options: {}

  - name: client-apis
    bindPoints:
      - interface: 0.0.0.0:8441
        address: ec2-18-188-201-183.us-east-2.compute.amazonaws.com:8441
    options:
    apis:
      - biding: edge-client
        options: {}
